const display = document.getElementById('display');
const statsDiv = document.getElementById('stats');

// Inicializace statistik z localStorage nebo pr√°zdn√©ho objektu
let stats = JSON.parse(localStorage.getItem('buttonStats')) || {};

function appendToDisplay(value) {
    display.value += value; // P≈ôid√° hodnotu na displej

    // Sledov√°n√≠ statistik tlaƒç√≠tek
    if (!isNaN(value)) { // Sledujeme pouze ƒç√≠slice
        stats[value] = (stats[value] || 0) + 1;
        localStorage.setItem('buttonStats', JSON.stringify(stats));
        updateStatsDisplay();
    }
}

function clearDisplay() {
    display.value = ''; // Vyma≈æe displej
}

function deleteLast() {
    display.value = display.value.slice(0, -1); // Odstran√≠ posledn√≠ znak
}

function calculateResult() {
    try {
        const sanitizedExpression = display.value
            .replace('‚àö', 'Math.sqrt')
            .replace('log', 'Math.log10')
            .replace('ln', 'Math.log'); // O≈°et≈ôen√≠ pro dal≈°√≠ funkce
        display.value = eval(sanitizedExpression); // Vyhodnocen√≠ v√Ωrazu
    } catch (error) {
        display.value = 'Chyba'; // Pokud je v√Ωraz neplatn√Ω
    }
}

// Funkce pro aktualizaci zobrazen√≠ statistik
function updateStatsDisplay() {
    statsDiv.innerHTML = ''; // Vypr√°zdnƒõn√≠ existuj√≠c√≠ho obsahu
    for (const [key, value] of Object.entries(stats)) {
        statsDiv.innerHTML += `<p>${key}: ${value}</p>`; // Zobrazen√≠ statistiky
    }
}

// Theme toggle
const themeToggle = document.getElementById('theme-toggle');
const body = document.body;

themeToggle.addEventListener('click', () => {
    body.classList.toggle('dark-mode');
    themeToggle.textContent = body.classList.contains('dark-mode') ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode';
});

// Naƒçten√≠ statistik p≈ôi naƒçten√≠ str√°nky
updateStatsDisplay();